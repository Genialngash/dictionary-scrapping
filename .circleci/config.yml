version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project\

command:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command:  |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
jobs:
 
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yaml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1


  test_site:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test.
          command: |
            URL="https://blog.udadddcity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
               return 0
            else
              return 1
            fi

      - destroy_environment


    
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      - test_site


# version: 2.1


# commands:
#   print_pipe_id:
#     steps:
#       - run: echo ${CIRCLE_WORKFLOW_ID}

# jobs:    
#   save-hello-world-output:
#       docker:
#          - image: circleci/node:13.8.0
#       steps:
#          - run: echo "text for testing" > ~/output.txt
#          - persist_to_workspace:
#                 root: ~/
#                 paths:
#                  - output.txt

#   print-output-file:
#       docker:
#          - image: circleci/node:13.8.0
#       steps:
#         - attach_workspace:
#             at: ~/
#         - run: cat ~/output.txt
        
#   print_pipeline_id:
#        docker:
#          - image: circleci/node:13.8.0
#         steps:
#          - print_pipe_id

      
# workflows:
#   say-hello-workflow:
#     jobs:
#       - save-hello-world-output
#       - print-output-file:
#          requires:
#           - save-hello-world-output
#       - print_pipeline_id 


# version: 2.1

# jobs:
#   save_hello_world_output:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - run: echo "hello world" > ~/output.txt
#       - persist_to_workspace:
#           root: ~/
#           paths:
#             - output.txt

#   print_output_file:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - attach_workspace:
#           at: ~/
#       - run: cat ~/output.txt

# workflows:
#   my_workflow:
#     jobs:
#       - save_hello_world_output
#       - print_output_file:
#           requires:
#             - save_hello_world_output
